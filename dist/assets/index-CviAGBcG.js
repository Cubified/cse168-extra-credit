var lt=Object.defineProperty;var dt=(e,t,n)=>t in e?lt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Ce=(e,t,n)=>(dt(e,typeof t!="symbol"?t+"":t,n),n);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))a(c);new MutationObserver(c=>{for(const l of c)if(l.type==="childList")for(const f of l.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&a(f)}).observe(document,{childList:!0,subtree:!0});function n(c){const l={};return c.integrity&&(l.integrity=c.integrity),c.referrerPolicy&&(l.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?l.credentials="include":c.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function a(c){if(c.ep)return;c.ep=!0;const l=n(c);fetch(c.href,l)}})();function k(){}function it(e){return e()}function Ge(){return Object.create(null)}function me(e){e.forEach(it)}function st(e){return typeof e=="function"}function ut(e,t){return e!=e?t==t:e!==t||e&&typeof e=="object"||typeof e=="function"}let de;function W(e,t){return e===t?!0:(de||(de=document.createElement("a")),de.href=t,e===de.href)}function mt(e){return Object.keys(e).length===0}function r(e,t){e.appendChild(t)}function D(e,t,n){e.insertBefore(t,n||null)}function R(e){e.parentNode&&e.parentNode.removeChild(e)}function ue(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function i(e){return document.createElement(e)}function ht(e){return document.createTextNode(e)}function u(){return ht(" ")}function d(e,t,n){n==null?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function ft(e){return Array.from(e.childNodes)}let ke;function Q(e){ke=e}const N=[],Je=[];let U=[];const Xe=[],pt=Promise.resolve();let $e=!1;function gt(){$e||($e=!0,pt.then(ct))}function Se(e){U.push(e)}const Te=new Set;let B=0;function ct(){if(B!==0)return;const e=ke;do{try{for(;B<N.length;){const t=N[B];B++,Q(t),bt(t.$$)}}catch(t){throw N.length=0,B=0,t}for(Q(null),N.length=0,B=0;Je.length;)Je.pop()();for(let t=0;t<U.length;t+=1){const n=U[t];Te.has(n)||(Te.add(n),n())}U.length=0}while(N.length);for(;Xe.length;)Xe.pop()();$e=!1,Te.clear(),Q(e)}function bt(e){if(e.fragment!==null){e.update(),me(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(Se)}}function _t(e){const t=[],n=[];U.forEach(a=>e.indexOf(a)===-1?t.push(a):n.push(a)),n.forEach(a=>a()),U=t}const vt=new Set;function wt(e,t){e&&e.i&&(vt.delete(e),e.i(t))}function M(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}function yt(e,t,n){const{fragment:a,after_update:c}=e.$$;a&&a.m(t,n),Se(()=>{const l=e.$$.on_mount.map(it).filter(st);e.$$.on_destroy?e.$$.on_destroy.push(...l):me(l),e.$$.on_mount=[]}),c.forEach(Se)}function xt(e,t){const n=e.$$;n.fragment!==null&&(_t(n.after_update),me(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function Ct(e,t){e.$$.dirty[0]===-1&&(N.push(e),gt(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function Tt(e,t,n,a,c,l,f=null,p=[-1]){const h=ke;Q(e);const m=e.$$={fragment:null,ctx:[],props:l,update:k,not_equal:c,bound:Ge(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(h?h.$$.context:[])),callbacks:Ge(),dirty:p,skip_bound:!1,root:t.target||h.$$.root};f&&f(m.root);let g=!1;if(m.ctx=n?n(e,t.props||{},(y,F,...H)=>{const V=H.length?H[0]:F;return m.ctx&&c(m.ctx[y],m.ctx[y]=V)&&(!m.skip_bound&&m.bound[y]&&m.bound[y](V),g&&Ct(e,y)),F}):[],m.update(),g=!0,me(m.before_update),m.fragment=a?a(m.ctx):!1,t.target){if(t.hydrate){const y=ft(t.target);m.fragment&&m.fragment.l(y),y.forEach(R)}else m.fragment&&m.fragment.c();t.intro&&wt(e.$$.fragment),yt(e,t.target,t.anchor),ct()}Q(h)}class $t{constructor(){Ce(this,"$$");Ce(this,"$$set")}$destroy(){xt(this,1),this.$destroy=k}$on(t,n){if(!st(n))return k;const a=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return a.push(n),()=>{const c=a.indexOf(n);c!==-1&&a.splice(c,1)}}$set(t){this.$$set&&!mt(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}}const St="4";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(St);function ze(e,t,n){const a=e.slice();return a[4]=t[n].desc,a[5]=t[n].img,a[7]=n,a}function Ze(e,t,n){const a=e.slice();return a[4]=t[n].desc,a[5]=t[n].img,a[7]=n,a}function et(e,t,n){const a=e.slice();return a[4]=t[n].desc,a[5]=t[n].img,a[7]=n,a}function tt(e,t,n){const a=e.slice();return a[4]=t[n].desc,a[5]=t[n].img,a[7]=n,a}function nt(e){let t,n,a,c,l,f=e[4]+"",p;return{c(){t=i("div"),n=i("img"),c=u(),l=i("p"),p=u(),W(n.src,a=K+"/hw1_168/"+e[5])||d(n,"src",a),d(n,"alt","HW1 demo "+e[7]),d(t,"class","item nonsquare")},m(h,m){D(h,t,m),r(t,n),r(t,c),r(t,l),l.innerHTML=f,r(t,p)},p:k,d(h){h&&R(t)}}}function rt(e){let t,n,a,c,l,f=e[4]+"",p;return{c(){t=i("div"),n=i("img"),c=u(),l=i("p"),p=u(),W(n.src,a=K+"/hw4/"+e[5])||d(n,"src",a),d(n,"alt","HW4 demo "+e[7]),d(t,"class","item nonsquare")},m(h,m){D(h,t,m),r(t,n),r(t,c),r(t,l),l.innerHTML=f,r(t,p)},p:k,d(h){h&&R(t)}}}function ot(e){let t,n,a,c,l,f=e[4]+"",p;return{c(){t=i("div"),n=i("img"),c=u(),l=i("p"),p=u(),W(n.src,a=K+"/hw3/"+e[5])||d(n,"src",a),d(n,"alt","HW3 demo "+e[7]),d(t,"class","item nonsquare")},m(h,m){D(h,t,m),r(t,n),r(t,c),r(t,l),l.innerHTML=f,r(t,p)},p:k,d(h){h&&R(t)}}}function at(e){let t,n,a,c,l,f=e[4]+"",p;return{c(){t=i("div"),n=i("img"),c=u(),l=i("p"),p=u(),W(n.src,a=K+"/hw2/"+e[5])||d(n,"src",a),d(n,"alt","HW2 demo "+e[7]),d(t,"class","item")},m(h,m){D(h,t,m),r(t,n),r(t,c),r(t,l),l.innerHTML=f,r(t,p)},p:k,d(h){h&&R(t)}}}function kt(e){let t,n,a,c,l,f,p,h,m,g,y,F,H,V,A,Y,Me,G,J,He,he,Ae,X,Le,x,fe,je,pe,Ee,L,z,Ie,Z,ee,qe,ge,Oe,te,Pe,C,be,Be,_e,Ne,j,ne,Ue,re,oe,Re,ve,Fe,ae,Ve,T,we,Qe,ye,We,E,ie,De,se,ce,Ke,xe,Ye,le,I=M(e[3]),b=[];for(let s=0;s<I.length;s+=1)b[s]=nt(tt(e,I,s));let q=M(e[2]),_=[];for(let s=0;s<q.length;s+=1)_[s]=rt(et(e,q,s));let O=M(e[1]),v=[];for(let s=0;s<O.length;s+=1)v[s]=ot(Ze(e,O,s));let P=M(e[0]),w=[];for(let s=0;s<P.length;s+=1)w[s]=at(ze(e,P,s));return{c(){t=i("main"),n=i("div"),a=i("img"),l=u(),f=i("h1"),f.textContent="CSE 168 Extra Credit Site",p=u(),h=i("h3"),h.innerHTML='Andrew Russell (<a href="mailto:alrussell@ucsd.edu">alrussell@ucsd.edu</a>)',m=u(),g=i("div"),y=i("h1"),y.innerHTML="Homework 1:<br/>Interactive Scene Editor for Ray Tracer",F=u(),H=i("p"),H.innerHTML='I improved my ray tracer from CSE 167 by adding antialiasing, area lights, depth-of-field, texture mapping, and .OBJ file parsing. Scenes are now editable in real-time using a <a href="https://github.com/ocornut/imgui">Dear Imgui</a>-based user interface.',V=u(),A=i("div"),Y=i("div"),Y.innerHTML='<iframe src="https://www.youtube.com/embed/b-tWFDPlZHQ?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',Me=u(),G=i("div"),J=i("div");for(let s=0;s<b.length;s+=1)b[s].c();He=u(),he=i("h4"),he.textContent="Sources:",Ae=u(),X=i("p"),X.innerHTML=`<a href="https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf">Triangle intersection algorithm</a>
       | 
      <a href="https://math.stackexchange.com/a/128999">Triangle area formula</a>
       | 
      <a href="https://jacco.ompf2.com/2022/04/13/how-to-build-a-bvh-part-1-basics">BVH calculation</a>
       | 
      <a href="https://tavianator.com/2011/ray_box.html">AABB intersection test</a>
       | 
      <a href="https://en.wikipedia.org/wiki/Wavefront_.obj_file">.OBJ file format</a>
       | 
      <a href="https://github.com/nothings/stb/blob/master/stb_image_write.h"><code>stb_image_write</code></a>
       | 
      <a href="https://github.com/nothings/stb/blob/master/stb_image.h"><code>stb_image</code></a>`,Le=u(),x=i("div"),fe=i("h1"),fe.innerHTML="CSE 167 Final Project:<br/>Interactive, Real-Time Ray Tracer in the Terminal",je=u(),pe=i("p"),pe.innerHTML='I extended my raytracer by reading and writing <a href="https://en.wikipedia.org/wiki/ANSI_escape_code">ANSI escape sequences</a> to standard input and standard output.  Coupled with the performance gains from my bounding volume hierarchy and the addition of multithreading, this allows for interactive raytracing in real-time.',Ee=u(),L=i("div"),z=i("div"),z.innerHTML='<iframe src="https://www.youtube.com/embed/F71dgYAOl-I?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',Ie=u(),Z=i("div"),ee=i("div");for(let s=0;s<_.length;s+=1)_[s].c();qe=u(),ge=i("h4"),ge.textContent="Sources:",Oe=u(),te=i("p"),te.innerHTML=`<a href="https://cadxfem.org/inf/Fast%20MinimumStorage%20RayTriangle%20Intersection.pdf">Triangle intersection algorithm</a>
       | 
      <a href="https://math.stackexchange.com/a/128999">Triangle area formula</a>
       | 
      <a href="https://jacco.ompf2.com/2022/04/13/how-to-build-a-bvh-part-1-basics">BVH calculation</a>
       | 
      <a href="https://tavianator.com/2011/ray_box.html">AABB intersection test</a>
       | 
      <a href="https://github.com/nothings/stb/blob/master/stb_image_write.h"><code>stb_image_write</code></a>`,Pe=u(),C=i("div"),be=i("h1"),be.textContent="CSE 167 Homework 3: Lathe Editor",Be=u(),_e=i("p"),_e.textContent="My project extends Homework 3 by generating a solid of revolution (lathe) from the user's curves.  It also generates smooth vertex normals, demonstrated by a cubemap for reflections.  Users can also add multiple curves and change their colors, in order to create complex compound shapes.",Ne=u(),j=i("div"),ne=i("div"),ne.innerHTML='<iframe src="https://www.youtube.com/embed/aVaHUaQEquQ?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',Ue=u(),re=i("div"),oe=i("div");for(let s=0;s<v.length;s+=1)v[s].c();Re=u(),ve=i("h4"),ve.textContent="Sources and Asset Credits:",Fe=u(),ae=i("p"),ae.innerHTML=`<a href="https://stackoverflow.com/questions/7904281/opengl-rotate-a-curve-about-the-y-axis">Solid of Revolution Generation</a>
       | 
      <a href="https://computergraphics.stackexchange.com/questions/4031/programmatically-generating-vertex-normals">Vertex Normals Calculation</a>
       | 
      <a href="https://www.humus.name/index.php?page=Textures&amp;start=0">Cubemap Image</a>`,Ve=u(),T=i("div"),we=i("h1"),we.textContent="CSE 167 Homework 2: Scene Animator",Qe=u(),ye=i("p"),ye.textContent="My project extends Homework 2 by adding more interactivity, turning the scene viewer into a scene editor.  Users can select a cubemap, transform individual objects, apply a texture to an object, add keyframes, and play back animations.  It also adds a custom scene, built to show off these features.",We=u(),E=i("div"),ie=i("div"),ie.innerHTML='<iframe src="https://www.youtube.com/embed/l4iw-qttC9c?si=9SXhBIqVycQj7vqg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>',De=u(),se=i("div"),ce=i("div");for(let s=0;s<w.length;s+=1)w[s].c();Ke=u(),xe=i("h4"),xe.textContent="Sources and Asset Credits:",Ye=u(),le=i("p"),le.innerHTML=`<a href="https://learnopengl.com/Advanced-OpenGL/Cubemaps">Learn OpenGL: Cubemaps</a>
       | 
      <a href="https://www.humus.name/index.php?page=Textures&amp;start=0">Cubemap Images</a>
       | 
      <a href="https://architextures.org/textures/category/stone">Limestone Texture</a>
       | 
      <a href="https://easings.net/#easeInOutQuad">Easing Function Formula</a>
       | 
      I used <a href="https://glm.g-truc.net/0.9.3/api/a00178.html"><code>glm::interpolate</code></a> to achieve interpolation between keyframes.`,W(a.src,c=K+"/utah.png")||d(a,"src",c),d(a,"alt","Utah Teapot"),d(n,"class","masthead"),d(Y,"class","video"),d(G,"class","scroller"),d(A,"class","assignment"),d(X,"class","spread"),d(g,"class","content"),d(z,"class","video"),d(Z,"class","scroller"),d(L,"class","assignment"),d(te,"class","spread"),d(x,"class","content"),d(ne,"class","video"),d(re,"class","scroller"),d(j,"class","assignment"),d(ae,"class","spread"),d(C,"class","content"),d(ie,"class","video"),d(se,"class","scroller"),d(E,"class","assignment"),d(le,"class","spread"),d(T,"class","content")},m(s,S){D(s,t,S),r(t,n),r(n,a),r(n,l),r(n,f),r(n,p),r(n,h),r(t,m),r(t,g),r(g,y),r(g,F),r(g,H),r(g,V),r(g,A),r(A,Y),r(A,Me),r(A,G),r(G,J);for(let o=0;o<b.length;o+=1)b[o]&&b[o].m(J,null);r(g,He),r(g,he),r(g,Ae),r(g,X),r(t,Le),r(t,x),r(x,fe),r(x,je),r(x,pe),r(x,Ee),r(x,L),r(L,z),r(L,Ie),r(L,Z),r(Z,ee);for(let o=0;o<_.length;o+=1)_[o]&&_[o].m(ee,null);r(x,qe),r(x,ge),r(x,Oe),r(x,te),r(t,Pe),r(t,C),r(C,be),r(C,Be),r(C,_e),r(C,Ne),r(C,j),r(j,ne),r(j,Ue),r(j,re),r(re,oe);for(let o=0;o<v.length;o+=1)v[o]&&v[o].m(oe,null);r(C,Re),r(C,ve),r(C,Fe),r(C,ae),r(t,Ve),r(t,T),r(T,we),r(T,Qe),r(T,ye),r(T,We),r(T,E),r(E,ie),r(E,De),r(E,se),r(se,ce);for(let o=0;o<w.length;o+=1)w[o]&&w[o].m(ce,null);r(T,Ke),r(T,xe),r(T,Ye),r(T,le)},p(s,[S]){if(S&8){I=M(s[3]);let o;for(o=0;o<I.length;o+=1){const $=tt(s,I,o);b[o]?b[o].p($,S):(b[o]=nt($),b[o].c(),b[o].m(J,null))}for(;o<b.length;o+=1)b[o].d(1);b.length=I.length}if(S&4){q=M(s[2]);let o;for(o=0;o<q.length;o+=1){const $=et(s,q,o);_[o]?_[o].p($,S):(_[o]=rt($),_[o].c(),_[o].m(ee,null))}for(;o<_.length;o+=1)_[o].d(1);_.length=q.length}if(S&2){O=M(s[1]);let o;for(o=0;o<O.length;o+=1){const $=Ze(s,O,o);v[o]?v[o].p($,S):(v[o]=ot($),v[o].c(),v[o].m(oe,null))}for(;o<v.length;o+=1)v[o].d(1);v.length=O.length}if(S&1){P=M(s[0]);let o;for(o=0;o<P.length;o+=1){const $=ze(s,P,o);w[o]?w[o].p($,S):(w[o]=at($),w[o].c(),w[o].m(ce,null))}for(;o<w.length;o+=1)w[o].d(1);w.length=P.length}},i:k,o:k,d(s){s&&R(t),ue(b,s),ue(_,s),ue(v,s),ue(w,s)}}}const K="/cse168-extra-credit";function Mt(e){return[[{desc:"<b>Custom Scene</b><br>Use <code>extra_credit_scene.txt</code> to view a custom scene built with cubemaps and reflections in mind.",img:"custom_scene.png"},{desc:"<b>Cubemaps</b>:<br>Press <code>c</code> to switch between cubemaps.",img:"cubemaps.png"},{desc:"<b>Keyframes</b>:<br>Press <code>space</code> in edit mode to add a keyframe, then <code>e</code> to exit edit mode and play back the animation.",img:"keyframes.gif"},{desc:"<b>Edit mode</b>:<br>Press <code>e</code> to enter edit mode, then <code>tab/shift+tab</code> to focus different objects in the scene.",img:"edit_mode.png"},{desc:"<b>Scene editing</b>:<br>Press <code>x/y/z</code> to select an axis, <code>t/r/s</code> to select an operation, and <code>up/down</code> to modify the current object.",img:"scene_editing.png"},{desc:"<b>Mouse orbit</b>:<br>Use the mouse to orbit the scene.",img:"mouse_orbit.png"},{desc:"<b>Reflections</b>:<br>Use the <code>reflectivity</code> command to specify how much of the cubemap an object reflects.",img:"reflections.png"},{desc:"<b>Textures</b>:<br>Press <code>n</code> when in edit mode to cycle between textures for each object.",img:"textures.png"}],[{desc:"<b>Real-time Editing</b><br>Construct curves in a 2D editing window and see them converted into 3D within an interactive viewing window.",img:"lathe.png"},{desc:"<b>Multiple Curves</b><br>Press <code>1/2/3</code> to add a new curve, and <code>C</code> to clear all curves.",img:"compound.png"},{desc:"<b>Vertex Normals</b><br>Each 3D object generates per-vertex normals, capable of smoothly reflecting a cubemap image.",img:"reflect.png"},{desc:"<b>Curve Coloring</b><br>Press <code>N</code> to change a single curve's color.",img:"color.png"}],[{desc:"<b>Main Assignment: High-Performance</b><br>Capable of rendering the Stanford dragon (100,000 triangles) at 4K resolution (3840x2160 pixels) in 1.7 seconds on an M1 Macbook Air.",img:"dragon_4k.png"},{desc:"<b>Main Assignment: Acceleration Structure</b><br>Computes a bounding volume hierarchy for fast intersection tests, reducing the time to render a scene with 100,000 triangles at 4K from 10 minutes to 1.7 seconds.",img:"acceleration.png"},{desc:"<b>Main Assignment: Multithreaded</b><br>Uses <code>std::thread</code> to render each scanline in a separate thread, improving performance by approximately 10x for sufficiently complex scenes.",img:"multithreaded.png"},{desc:"<b>Extra Credit: Real-Time</b><br>Capable of rendering directly to the terminal via ANSI escape sequences in real-time.",img:"realtime.png"},{desc:"<b>Extra Credit: Interactive</b><br>Click and drag the mouse to orbit around the scene to view it from different angles.",img:"interactive.png"},{desc:"<b>Extra Credit: Resizable</b><br>Re-run the program with the terminal at different zoom levels to view the scene at different resolutions.",img:"resolution.png"}],[{desc:"<b>Acceleration Structure</b><br>Computes a bounding volume hierarchy for fast intersection tests, reducing the time to render a scene with 100,000 triangles at 4K from 10 minutes to 1.7 seconds.",img:"acceleration.png"},{desc:"<b>.OBJ File Parsing</b><br>Use the <code>obj</code> command to add a Wavefront OBJ model to the scene, with support for models that supply their own vertex normals and texture coordinates.",img:"obj.png"},{desc:"<b>Texture Mapping</b><br>Use the <code>image</code> command to set the scene's background image, and the <code>texture</code> command to set the current object's texture using a PNG file.",img:"textures.png"},{desc:"<b>Area Lights/Soft Shadows</b><br>Use the <code>area</code> command to create an area light, which randomly samples shadow rays based on the <code>shadowsamples</code> command.",img:"soft_shadows.png"},{desc:"<b>Antialiasing</b><br>Use the <code>aasamples</code> command to adjust the number of jitter-sampled rays. The first ray is always shot through the center of each pixel.",img:"antialiasing.png"},{desc:"<b>Depth-of-Field</b><br>Modify <code>focallen, aperture,</code> and <code>dofsamples</code> to adjust the lens properties for randomly-sampled depth-of-field.",img:"dof.png"},{desc:"<b>Multithreading</b><br>Uses <code>std::thread</code> to render scanlines in separate threads, improving performance by approximately 10x for sufficiently complex scenes. Adjust the <code>threads</code> command to spawn a different number of threads.",img:"multithreaded.png"}]]}class Ht extends $t{constructor(t){super(),Tt(this,t,Mt,kt,ut,{})}}new Ht({target:document.getElementById("app")});
